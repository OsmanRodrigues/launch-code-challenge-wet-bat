version: '3.8'
services:
    db-prod:
        container_name: db-prod
        image: postgres:14.1-alpine
        env_file:
            - ./db/.env.production
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 10
        restart: always
        ports:
        - '5432:5432'
        volumes:
        - db-prod:/var/lib/postgresql/data
    api:
        container_name: api
        build:
            context: ./api
        image: api
        depends_on:
            db-prod:
                condition: service_healthy
        command: yarn start-build-prod
        env_file:
            - ./api/.env.production
        environment:
            - DB_HOST=db-prod
        ports:
            - 4040:4040
        links:
            - db-prod
    ui:
        container_name: ui
        build:
            context: ./ui
        image: ui
        command: yarn start
        env_file:
            - ./ui/.env.production
        ports:
            - 3000:3000
    db-dev:
        container_name: db-dev
        image: postgres:14.1-alpine
        restart: always
        env_file:
            - ./db/.env.development
        ports:
        - '5432:5432'
        volumes:
        - db-dev:/var/lib/postgresql/data
volumes:
    db-prod:
        driver: local
    db-dev:
        driver: local
